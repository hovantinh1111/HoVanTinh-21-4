@using PagedList;
@using PagedList.Mvc;
{@model PagedList.IPagedList<WebsiteBanHang.Context.Product>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="content-wrapper">
    <h2>Quản lí sản phẩm</h2>
    <style>
        /* Set the style for the a tag */
        .pagination a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
            border: 1px solid #29c9d4;
        }
            /* set the style for the active class */
            .pagination a.active {
                background-color: dodgerblu;
                color: white;
                display: inline-block;
                width: 40px;
                height: 48px;
                border: 1px solid #ffb600;
            }
            /* add background color when user hovers on inactive class */
            .pagination a:hover:not(.active) {
                background-color: #4cff00;
                display: inline-block;
                width: 40px;
                height: 48px;
                border: 1px solid #00ffff;
            }
    </style>
    <p>
        @Html.ActionLink("Tạo mới", "Create")
    </p>
    @using (Html.BeginForm("Index", "Product", FormMethod.Get))
    {
        <p>
            Tìm tên sản phẩm:@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Tìm kiếm" />
        </p>

    }
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Avartar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ShortDes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().PiceDiscount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Typeld)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().BrandId)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <img src="~/Content/images/items/@Html.DisplayFor(modelItem => item.Avartar)" style="width:100px;height:100px" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShortDes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PiceDiscount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Typeld)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BrandId)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>

    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, currentFilter = ViewBag.CurrentFilter }))
</div>
